# Средствами языка Python сформировать текстовый файл (.txt), содержащий последовательность из целых положительных
# и отрицательных чисел. Сформировать новый текстовый файл следующего вида, предварительно выполнив требуемую
#обработку элементов:
#Исходные данные:
#Количество элементов:
#Произведение элементов:
#Повторяющиеся элементы:
#Количество повторяющихся элементов:
#Элементы больше 5 увеличены в два раза:

# Запишем в файл data_3.txt структуру данных - список
l = ['-99 6 12 -36 20 45 100 -15']
f3 = open('data_3.txt', 'w')
f3.writelines(l)
f3.close()
# Дублируем список в новый файл data_4.txt
f4 = open('data_4.txt', 'w')
f4.write('Исходные данные: ')
f4.write('\n')
f4.writelines(l)
f4.close()
# разбиваем строку и ее значения преобразуем в числа
f3 = open('data_3.txt')
k = f3.read()
k = k.split()
for i in range(len(k)):
 k[i] = int(k[i])
f3.close()
# Запись результатов в новый файл
with open(f4, 'w') as f:
    f.write("Исходные данные:\n")
    f.write(" ".join(map(str, numbers)) + "\n")
    f.write(f"Количество элементов: {count}\n")
    f.write(f"Произведение элементов: {product}\n")
    f.write("Повторяющиеся элементы: " + ", ".join(f"{k} (кол-во: {v})" for k, v in repeated_elements.items()) + "\n")
    f.write(f"Количество повторяющихся элементов: {sum(repeated_elements.values())}\n")
    f.write("Элементы больше 5 увеличены в два раза: " + " ".join(map(str, increased_elements)) + "\n")
